//этот миксин нужен для сокращения описания свойств сетки.
//добавялем его в класс item (<li>), из которых состоит сетка
//можно написать этот миксин для каждого медиа правила, то есть внутри миксина mq
//use @include grid(15px, 2);
@mixin grid($margins, $columns) {
  margin: $margins;
  flex-basis: calc((100% - 2 * #{$columns} * #{$margins}) / #{$columns});
}

//этот миксин нужен для сокращения описания медиа-правил.
//use @include mq(tablet){
//сюда пишем контент;
//};

@mixin mq($range) {
  $mobile: 480px;
  $tablet: 768px;
  $desktop: 1366px;
  @if $range == mobile-only {
    @media screen and (max-width: #{$tablet - 0.02}) {
      @content;
    }
  } @else if $range == mobile {
    @media screen and (min-width: $mobile) {
      @content;
    }
  } @else if $range == tablet-only {
    @media screen and (min-width: $tablet) and (max-width: #{$desktop - 0.02}) {
      @content;
    }
  } @else if $range == tablet {
    @media screen and (min-width: $tablet) {
      @content;
    }
  } @else if $range == desktop {
    @media screen and (min-width: $desktop) {
      @content;
    }
  } @else if $range == notDesktop {
    @media screen and (max-width: #{$desktop - 0.02}) {
      @content;
    }
  } @else if $range == retina {
    @media screen and (min-device-pixel-ratio: 2),
      screen and (-moz-min-device-pixel-ratio: 2),
      screen and (-o-min-device-pixel-ratio: 2/1),
      screen and (-webkit-min-device-pixel-ratio: 2),
      screen and (min-resolution: 192dpi),
      screen and (min-resolution: 2dppx) {
      @content;
    }
  }
}

//этот миксин нужен для сокращения повторяющихся списков свойств шрифтов.
//добавялем его в класс, в котором нужно описать свойства шрифта
//use @include font-style(26px, 900, 1.61, null, $color-white);
@mixin font-style($size: false, $weight: false, $lh: false, $ls: false, $colour: false) {
  @if $size {
    font-size: $size;
  }
  @if $weight {
    font-weight: $weight;
  }
  @if $lh {
    line-height: $lh;
  }
  @if $ls {
    letter-spacing: $ls;
  }
  @if $colour {
    color: $colour;
  }
}

//этот миксин нужен для сокращения повторяющихся списков свойств для анимации.
//добавялем его в тело класса, который должен красиво анимироваться
//в том же классе нужно не забыть перед этим миксином вызвать свойство, которое будем анимировать позже в миксине
//например   fill: red;

//use @include animate(fill, 250ms);
//use @include animate(fill); - так тоже можно
@mixin animate($property, $duration: 250ms) {
  transition-property: $property;
  transition-duration: $duration;

  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}
